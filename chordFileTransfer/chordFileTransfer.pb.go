// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v3.19.6
// source: chordFileTransfer.proto

package ctfp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyValuePair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValuePair) Reset() {
	*x = KeyValuePair{}
	mi := &file_chordFileTransfer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValuePair) ProtoMessage() {}

func (x *KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValuePair.ProtoReflect.Descriptor instead.
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{0}
}

func (x *KeyValuePair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValuePair) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type FindSuccessorArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindSuccessorArgs) Reset() {
	*x = FindSuccessorArgs{}
	mi := &file_chordFileTransfer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindSuccessorArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSuccessorArgs) ProtoMessage() {}

func (x *FindSuccessorArgs) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSuccessorArgs.ProtoReflect.Descriptor instead.
func (*FindSuccessorArgs) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{1}
}

func (x *FindSuccessorArgs) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type FindSuccessorReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=Ok,proto3" json:"Ok,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindSuccessorReply) Reset() {
	*x = FindSuccessorReply{}
	mi := &file_chordFileTransfer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindSuccessorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSuccessorReply) ProtoMessage() {}

func (x *FindSuccessorReply) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSuccessorReply.ProtoReflect.Descriptor instead.
func (*FindSuccessorReply) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{2}
}

func (x *FindSuccessorReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *FindSuccessorReply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type NotifyArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Bucket        []*KeyValuePair        `protobuf:"bytes,2,rep,name=Bucket,proto3" json:"Bucket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyArgs) Reset() {
	*x = NotifyArgs{}
	mi := &file_chordFileTransfer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyArgs) ProtoMessage() {}

func (x *NotifyArgs) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyArgs.ProtoReflect.Descriptor instead.
func (*NotifyArgs) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{3}
}

func (x *NotifyArgs) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NotifyArgs) GetBucket() []*KeyValuePair {
	if x != nil {
		return x.Bucket
	}
	return nil
}

type NotifyReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Confirm       bool                   `protobuf:"varint,1,opt,name=Confirm,proto3" json:"Confirm,omitempty"`
	Bucket        []*KeyValuePair        `protobuf:"bytes,2,rep,name=Bucket,proto3" json:"Bucket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyReply) Reset() {
	*x = NotifyReply{}
	mi := &file_chordFileTransfer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyReply) ProtoMessage() {}

func (x *NotifyReply) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyReply.ProtoReflect.Descriptor instead.
func (*NotifyReply) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{4}
}

func (x *NotifyReply) GetConfirm() bool {
	if x != nil {
		return x.Confirm
	}
	return false
}

func (x *NotifyReply) GetBucket() []*KeyValuePair {
	if x != nil {
		return x.Bucket
	}
	return nil
}

type GetSuccessorsArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSuccessorsArgs) Reset() {
	*x = GetSuccessorsArgs{}
	mi := &file_chordFileTransfer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSuccessorsArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuccessorsArgs) ProtoMessage() {}

func (x *GetSuccessorsArgs) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuccessorsArgs.ProtoReflect.Descriptor instead.
func (*GetSuccessorsArgs) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{5}
}

type GetSuccessorsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Successors    []string               `protobuf:"bytes,1,rep,name=Successors,proto3" json:"Successors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSuccessorsReply) Reset() {
	*x = GetSuccessorsReply{}
	mi := &file_chordFileTransfer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSuccessorsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuccessorsReply) ProtoMessage() {}

func (x *GetSuccessorsReply) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuccessorsReply.ProtoReflect.Descriptor instead.
func (*GetSuccessorsReply) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{6}
}

func (x *GetSuccessorsReply) GetSuccessors() []string {
	if x != nil {
		return x.Successors
	}
	return nil
}

type GetPredecessorArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPredecessorArgs) Reset() {
	*x = GetPredecessorArgs{}
	mi := &file_chordFileTransfer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPredecessorArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPredecessorArgs) ProtoMessage() {}

func (x *GetPredecessorArgs) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPredecessorArgs.ProtoReflect.Descriptor instead.
func (*GetPredecessorArgs) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{7}
}

type GetPredecessorReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPredecessorReply) Reset() {
	*x = GetPredecessorReply{}
	mi := &file_chordFileTransfer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPredecessorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPredecessorReply) ProtoMessage() {}

func (x *GetPredecessorReply) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPredecessorReply.ProtoReflect.Descriptor instead.
func (*GetPredecessorReply) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{8}
}

func (x *GetPredecessorReply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArgs) Reset() {
	*x = GetArgs{}
	mi := &file_chordFileTransfer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArgs) ProtoMessage() {}

func (x *GetArgs) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArgs.ProtoReflect.Descriptor instead.
func (*GetArgs) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{9}
}

func (x *GetArgs) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type GetReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Confirm       bool                   `protobuf:"varint,1,opt,name=Confirm,proto3" json:"Confirm,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReply) Reset() {
	*x = GetReply{}
	mi := &file_chordFileTransfer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReply) ProtoMessage() {}

func (x *GetReply) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReply.ProtoReflect.Descriptor instead.
func (*GetReply) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{10}
}

func (x *GetReply) GetConfirm() bool {
	if x != nil {
		return x.Confirm
	}
	return false
}

func (x *GetReply) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type PutArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	FileContent   []byte                 `protobuf:"bytes,2,opt,name=FileContent,proto3" json:"FileContent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutArgs) Reset() {
	*x = PutArgs{}
	mi := &file_chordFileTransfer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutArgs) ProtoMessage() {}

func (x *PutArgs) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutArgs.ProtoReflect.Descriptor instead.
func (*PutArgs) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{11}
}

func (x *PutArgs) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *PutArgs) GetFileContent() []byte {
	if x != nil {
		return x.FileContent
	}
	return nil
}

type PutReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Confirm       bool                   `protobuf:"varint,1,opt,name=Confirm,proto3" json:"Confirm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutReply) Reset() {
	*x = PutReply{}
	mi := &file_chordFileTransfer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutReply) ProtoMessage() {}

func (x *PutReply) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutReply.ProtoReflect.Descriptor instead.
func (*PutReply) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{12}
}

func (x *PutReply) GetConfirm() bool {
	if x != nil {
		return x.Confirm
	}
	return false
}

type DeleteArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteArgs) Reset() {
	*x = DeleteArgs{}
	mi := &file_chordFileTransfer_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArgs) ProtoMessage() {}

func (x *DeleteArgs) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArgs.ProtoReflect.Descriptor instead.
func (*DeleteArgs) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteArgs) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type DeleteReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Confirm       bool                   `protobuf:"varint,1,opt,name=Confirm,proto3" json:"Confirm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteReply) Reset() {
	*x = DeleteReply{}
	mi := &file_chordFileTransfer_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReply) ProtoMessage() {}

func (x *DeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReply.ProtoReflect.Descriptor instead.
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteReply) GetConfirm() bool {
	if x != nil {
		return x.Confirm
	}
	return false
}

type GetAESKeyArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAESKeyArgs) Reset() {
	*x = GetAESKeyArgs{}
	mi := &file_chordFileTransfer_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAESKeyArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAESKeyArgs) ProtoMessage() {}

func (x *GetAESKeyArgs) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAESKeyArgs.ProtoReflect.Descriptor instead.
func (*GetAESKeyArgs) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{15}
}

func (x *GetAESKeyArgs) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type GetAESKeyReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AESKey        []byte                 `protobuf:"bytes,1,opt,name=AESKey,proto3" json:"AESKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAESKeyReply) Reset() {
	*x = GetAESKeyReply{}
	mi := &file_chordFileTransfer_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAESKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAESKeyReply) ProtoMessage() {}

func (x *GetAESKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAESKeyReply.ProtoReflect.Descriptor instead.
func (*GetAESKeyReply) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{16}
}

func (x *GetAESKeyReply) GetAESKey() []byte {
	if x != nil {
		return x.AESKey
	}
	return nil
}

type EmptyArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyArgs) Reset() {
	*x = EmptyArgs{}
	mi := &file_chordFileTransfer_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyArgs) ProtoMessage() {}

func (x *EmptyArgs) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyArgs.ProtoReflect.Descriptor instead.
func (*EmptyArgs) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{17}
}

type EmptyReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyReply) Reset() {
	*x = EmptyReply{}
	mi := &file_chordFileTransfer_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReply) ProtoMessage() {}

func (x *EmptyReply) ProtoReflect() protoreflect.Message {
	mi := &file_chordFileTransfer_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReply.ProtoReflect.Descriptor instead.
func (*EmptyReply) Descriptor() ([]byte, []int) {
	return file_chordFileTransfer_proto_rawDescGZIP(), []int{18}
}

var File_chordFileTransfer_proto protoreflect.FileDescriptor

var file_chordFileTransfer_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x0c, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x25, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x22, 0x3e, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x4f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4d, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x41, 0x72, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x25, 0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x4e, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x12, 0x25, 0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x41, 0x72, 0x67, 0x73, 0x22, 0x34, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x41, 0x72, 0x67, 0x73, 0x22, 0x2f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x25, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x3e, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x47, 0x0a, 0x07, 0x50, 0x75, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x24, 0x0a, 0x08, 0x50, 0x75, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x22,
	0x28, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x22, 0x21, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x45, 0x53, 0x4b, 0x65, 0x79, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x4b, 0x65, 0x79, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x45, 0x53, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x45, 0x53, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x41, 0x45, 0x53, 0x4b, 0x65, 0x79, 0x22,
	0x0b, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x67, 0x73, 0x22, 0x0c, 0x0a, 0x0a,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0x9b, 0x03, 0x0a, 0x11, 0x43,
	0x68, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x12, 0x38, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x12, 0x12, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x13, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x06, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x0b, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x0c, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x38, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73,
	0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x13, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x08, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x09, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x03, 0x50, 0x75, 0x74, 0x12, 0x08, 0x2e, 0x50, 0x75, 0x74, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0x09, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x0c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x45, 0x53, 0x4b, 0x65, 0x79,
	0x12, 0x0e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x45, 0x53, 0x4b, 0x65, 0x79, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x45, 0x53, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x25, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0a, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x0b, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x0a, 0x5a, 0x08, 0x70, 0x6b, 0x67, 0x2f,
	0x63, 0x74, 0x66, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chordFileTransfer_proto_rawDescOnce sync.Once
	file_chordFileTransfer_proto_rawDescData = file_chordFileTransfer_proto_rawDesc
)

func file_chordFileTransfer_proto_rawDescGZIP() []byte {
	file_chordFileTransfer_proto_rawDescOnce.Do(func() {
		file_chordFileTransfer_proto_rawDescData = protoimpl.X.CompressGZIP(file_chordFileTransfer_proto_rawDescData)
	})
	return file_chordFileTransfer_proto_rawDescData
}

var file_chordFileTransfer_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_chordFileTransfer_proto_goTypes = []any{
	(*KeyValuePair)(nil),        // 0: KeyValuePair
	(*FindSuccessorArgs)(nil),   // 1: FindSuccessorArgs
	(*FindSuccessorReply)(nil),  // 2: FindSuccessorReply
	(*NotifyArgs)(nil),          // 3: NotifyArgs
	(*NotifyReply)(nil),         // 4: NotifyReply
	(*GetSuccessorsArgs)(nil),   // 5: GetSuccessorsArgs
	(*GetSuccessorsReply)(nil),  // 6: GetSuccessorsReply
	(*GetPredecessorArgs)(nil),  // 7: GetPredecessorArgs
	(*GetPredecessorReply)(nil), // 8: GetPredecessorReply
	(*GetArgs)(nil),             // 9: GetArgs
	(*GetReply)(nil),            // 10: GetReply
	(*PutArgs)(nil),             // 11: PutArgs
	(*PutReply)(nil),            // 12: PutReply
	(*DeleteArgs)(nil),          // 13: DeleteArgs
	(*DeleteReply)(nil),         // 14: DeleteReply
	(*GetAESKeyArgs)(nil),       // 15: GetAESKeyArgs
	(*GetAESKeyReply)(nil),      // 16: GetAESKeyReply
	(*EmptyArgs)(nil),           // 17: EmptyArgs
	(*EmptyReply)(nil),          // 18: EmptyReply
}
var file_chordFileTransfer_proto_depIdxs = []int32{
	0,  // 0: NotifyArgs.Bucket:type_name -> KeyValuePair
	0,  // 1: NotifyReply.Bucket:type_name -> KeyValuePair
	1,  // 2: ChordFileTransfer.FindSuccessor:input_type -> FindSuccessorArgs
	3,  // 3: ChordFileTransfer.Notify:input_type -> NotifyArgs
	5,  // 4: ChordFileTransfer.GetSuccessors:input_type -> GetSuccessorsArgs
	7,  // 5: ChordFileTransfer.GetPredecessor:input_type -> GetPredecessorArgs
	9,  // 6: ChordFileTransfer.Get:input_type -> GetArgs
	11, // 7: ChordFileTransfer.Put:input_type -> PutArgs
	13, // 8: ChordFileTransfer.Delete:input_type -> DeleteArgs
	15, // 9: ChordFileTransfer.GetAESKey:input_type -> GetAESKeyArgs
	17, // 10: ChordFileTransfer.PrintState:input_type -> EmptyArgs
	2,  // 11: ChordFileTransfer.FindSuccessor:output_type -> FindSuccessorReply
	4,  // 12: ChordFileTransfer.Notify:output_type -> NotifyReply
	6,  // 13: ChordFileTransfer.GetSuccessors:output_type -> GetSuccessorsReply
	8,  // 14: ChordFileTransfer.GetPredecessor:output_type -> GetPredecessorReply
	10, // 15: ChordFileTransfer.Get:output_type -> GetReply
	12, // 16: ChordFileTransfer.Put:output_type -> PutReply
	14, // 17: ChordFileTransfer.Delete:output_type -> DeleteReply
	16, // 18: ChordFileTransfer.GetAESKey:output_type -> GetAESKeyReply
	18, // 19: ChordFileTransfer.PrintState:output_type -> EmptyReply
	11, // [11:20] is the sub-list for method output_type
	2,  // [2:11] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_chordFileTransfer_proto_init() }
func file_chordFileTransfer_proto_init() {
	if File_chordFileTransfer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chordFileTransfer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chordFileTransfer_proto_goTypes,
		DependencyIndexes: file_chordFileTransfer_proto_depIdxs,
		MessageInfos:      file_chordFileTransfer_proto_msgTypes,
	}.Build()
	File_chordFileTransfer_proto = out.File
	file_chordFileTransfer_proto_rawDesc = nil
	file_chordFileTransfer_proto_goTypes = nil
	file_chordFileTransfer_proto_depIdxs = nil
}
